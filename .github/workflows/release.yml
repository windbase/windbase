name: Build and Release Assets

on:
  release:
    types: [published]

jobs:
  build-and-upload-assets:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Verify lockfile exists
        run: |
          echo "Checking for pnpm-lock.yaml..."
          ls -la pnpm-lock.yaml || echo "pnpm-lock.yaml not found!"
          echo "Current directory contents:"
          ls -la

      - name: Install dependencies
        run: pnpm install

      - name: Read version from core package
        id: version
        run: |
          VERSION=$(node -p "require('./packages/core/package.json').version")
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Build all packages
        run: pnpm nx run-many --target=build --all

      - name: Build web app
        run: pnpm nx build web

      - name: Create build artifacts
        run: |
          # Create web app zip
          cd apps/web/dist
          zip -r ../../../windbase-web-${{ steps.version.outputs.version }}.zip .
          cd ../../..

      - name: Upload assets to release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.release.tag_name }}
          files: |
            windbase-web-${{ steps.version.outputs.version }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windbase-build-${{ steps.version.outputs.version }}
          path: apps/web/dist/
          retention-days: 30

  deploy-to-netlify:
    needs: build-and-upload-assets
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: windbase-build-${{ needs.build-and-upload-assets.outputs.version }}
          path: web-dist

      - name: Install Netlify CLI
        run: npm install -g netlify-cli

      - name: Deploy to Netlify
        run: |
          netlify deploy \
            --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} \
            --site ${{ secrets.NETLIFY_SITE_ID }} \
            --prod \
            --dir=web-dist
